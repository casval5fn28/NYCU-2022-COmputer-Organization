$date
	Thu Apr 07 00:10:49 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_1bit_tb $end
$var wire 1 ! sum $end
$var wire 1 " carry $end
$var reg 1 # Ainvert $end
$var reg 1 $ Binvert $end
$var reg 1 % a $end
$var reg 1 & b $end
$var reg 1 ' cin $end
$var reg 1 ( less $end
$var reg 2 ) operation [1:0] $end
$scope module UUT $end
$var wire 1 # Ainvert $end
$var wire 1 $ Binvert $end
$var wire 1 ' cin $end
$var wire 1 ( less $end
$var wire 2 * operation [1:0] $end
$var wire 1 % src1 $end
$var wire 1 & src2 $end
$var wire 1 + x1 $end
$var wire 1 , x2 $end
$var wire 1 - x4 $end
$var wire 1 . x3 $end
$var wire 1 / tmp_res $end
$var wire 1 0 tmp_cout $end
$var wire 1 1 b_res $end
$var wire 1 2 a_res $end
$var reg 1 " cout $end
$var reg 1 ! result $end
$scope module ad $end
$var wire 1 + A $end
$var wire 1 , B $end
$var wire 1 ' ccin $end
$var wire 1 3 w1 $end
$var wire 1 4 w2 $end
$var wire 1 5 w3 $end
$var reg 1 0 ccout $end
$var reg 1 . sums $end
$upscope $end
$scope module m2_A $end
$var wire 1 # select $end
$var wire 1 % src1 $end
$var wire 1 6 src2 $end
$var reg 1 2 result $end
$upscope $end
$scope module m2_B $end
$var wire 1 $ select $end
$var wire 1 & src1 $end
$var wire 1 7 src2 $end
$var reg 1 1 result $end
$upscope $end
$scope module m4 $end
$var wire 2 8 select [1:0] $end
$var wire 1 + src1 $end
$var wire 1 , src2 $end
$var wire 1 . src3 $end
$var wire 1 - src4 $end
$var reg 1 / result $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 8
07
06
15
04
03
12
11
10
1/
0.
0-
1,
1+
b0 *
b0 )
0(
0'
1&
1%
0$
0#
1"
1!
$end
#21000
b1 )
b1 *
b1 8
#42000
0!
0/
b11 )
b11 *
b11 8
#63000
